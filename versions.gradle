/*
 * Copyright (C) 2018 The Android Open Source Project
 * Modifications Copyright (C) 2018 Codepunk, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 * The original work can be found at The Android Open Source Project at
 *
 *      https://github.com/googlesamples
 *
 *      Repository: android-architecture-components
 *      Directory: GithubBrowserSample
 *      File: versions.gradle
 *
 * Modifications:
 * August 2018: Modified for Codepunk-specific plugins and dependencies
 *              Author(s): Scott Slater
 */

/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/

/**
 * TODO Still to add:
 * room
 */

def versions = [:]
versions.android_gradle_plugin = "3.4.0-alpha02"
versions.android_material = "1.0.0"
versions.android_support = "28.0.0"
versions.android_testing_support_library = "1.1.0-alpha4"
versions.androidx_legacy = "1.0.0"
versions.apache_codec = "1.11"
versions.app_compat = "1.0.0-rc01"
versions.constraint_layout = "1.1.2"
versions.dagger = "2.15"
versions.dokka = "0.9.17"
versions.espresso = "3.1.0-alpha4"
versions.findbugs = "3.0.2"
versions.junit = "4.12"
versions.kotlin = "1.2.61"
versions.kotlin_jdk = "1.2.71"
versions.lifecycle = "2.0.0"
versions.navigation = "1.0.0-alpha05"
versions.retrofit = "2.4.0"
// versions.retrofit_moshi_kotlin = "1.7.0" TODO Maybe not needed

ext.deps = [:]

def android = [:]
android.animated_vector_drawable = "com.android.support:animated-vector-drawable:${versions.android_support}"
android.material = "com.google.android.material:material:${versions.android_material}"
deps.android = android

def androidx = [:]
androidx.app_compat = "androidx.appcompat:appcompat:${versions.app_compat}"
androidx.constraint_layout = "androidx.constraintlayout:constraintlayout:${versions.constraint_layout}"
androidx.legacy = "androidx.legacy:legacy-support-v4:${versions.androidx_legacy}"
androidx.preference = "androidx.preference:preference:${versions.androidx_legacy}"
deps.androidx = androidx

def apache = [:]
apache.codec = "commons-codec:commons-codec:${versions.apache_codec}"
deps.apache = apache

def atsl = [:]
atsl.runner = "com.android.support.test:runner:${versions.android_testing_support_library}"
deps.atsl = atsl

def dagger = [:]
dagger.android = "com.google.dagger:dagger-android:${versions.dagger}"
dagger.android_support = "com.google.dagger:dagger-android-support:${versions.dagger}"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:${versions.dagger}"
dagger.compiler = "com.google.dagger:dagger-compiler:${versions.dagger}"
dagger.dagger = "com.google.dagger:dagger:${versions.dagger}"
deps.dagger = dagger

def dokka = [:]
dokka.plugin = "org.jetbrains.dokka:dokka-android-gradle-plugin:${versions.dokka}"
deps.dokka = dokka

def espresso = [:]
espresso.core = "com.android.support.test.espresso:espresso-core:${versions.espresso}"
deps.espresso = espresso

def kotlin = [:]
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin_jdk}"
kotlin.compiler = "org.jetbrains.kotlin:kotlin-compiler-embeddable:${versions.kotlin}"
deps.kotlin = kotlin

def lifecycle = [:]
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycle}"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:${versions.lifecycle}"
lifecycle.testing = "androidx.arch.core:core-testing:${versions.lifecycle}"
deps.lifecycle = lifecycle

def navigation = [:]
navigation.fragment_ktx = "android.arch.navigation:navigation-fragment-ktx:${versions.navigation}"
navigation.safe_args_plugin = "android.arch.navigation:navigation-safe-args-gradle-plugin:${versions.navigation}"
navigation.testing_ktx = "android.arch.navigation:navigation-testing-ktx:${versions.navigation}"
navigation.ui_ktx = "android.arch.navigation:navigation-ui-ktx:${versions.navigation}"
deps.navigation = navigation

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:${versions.retrofit}"
retrofit.moshi = "com.squareup.retrofit2:converter-moshi:${versions.retrofit}"
// retrofit.moshi_kotlin = "com.squareup.moshi:moshi-kotlin:${versions.retrofit_moshi_kotlin}" TODO Maybe not needed
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:${versions.retrofit}"
deps.retrofit = retrofit

deps.android_gradle_plugin = "com.android.tools.build:gradle:${versions.android_gradle_plugin}"
deps.junit = "junit:junit:${versions.junit}"
deps.findbugs = "com.google.code.findbugs:jsr305:${versions.findbugs}"

def build_versions = [:]
build_versions.min_sdk = 14
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}
ext.addRepos = this.&addRepos
